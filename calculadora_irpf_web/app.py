import streamlit as st
from renta import calcular_renta_total

# Configuraci√≥n de la p√°gina
st.set_page_config(
    page_title="Calculadora IRPF Espa√±a 2024",
    page_icon="üßæ",
    layout="wide"
)

# CSS personalizado
st.markdown("""
<style>
    .main-header {
        text-align: center;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 30px;
        border-radius: 10px;
        margin-bottom: 30px;
    }
    .resultado-box {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 30px;
        border-radius: 10px;
        text-align: center;
        margin: 20px 0;
    }
    .resultado-monto {
        font-size: 48px;
        font-weight: bold;
        margin: 20px 0;
    }
    .pagar {
        color: #ff6b6b;
    }
    .devolver {
        color: #51cf66;
    }
</style>
""", unsafe_allow_html=True)

# T√≠tulo principal
st.markdown("""
<div class="main-header">
    <h1>üßæ Calculadora de IRPF - Espa√±a 2024</h1>
    <p>Calcula tu declaraci√≥n de la renta de forma f√°cil y r√°pida</p>
</div>
""", unsafe_allow_html=True)

# Informaci√≥n inicial
with st.expander("‚ÑπÔ∏è ¬øC√≥mo funciona esta calculadora?"):
    st.write("""
    Esta calculadora te ayuda a estimar tu declaraci√≥n de la renta aplicando:
    - ‚úÖ Escalas impositivas estatales y auton√≥micas 2024
    - ‚úÖ M√≠nimos personales y familiares
    - ‚úÖ Deducciones por hijos, vivienda, donaciones y maternidad
    - ‚úÖ Reducci√≥n del 60% en alquileres de vivienda
    - ‚úÖ C√°lculo real con retenciones (saber si pagas o devuelves)
    
    **‚ö†Ô∏è Nota:** Esta es una herramienta orientativa. Para casos complejos, consulta con un asesor fiscal.
    """)

# Formulario en columnas
st.markdown("---")
st.header("üìù Introduce tus datos")

# === DATOS PERSONALES ===
st.subheader("üë§ Datos Personales")
col1, col2 = st.columns(2)

with col1:
    comunidad = st.selectbox(
        "üìç Comunidad Aut√≥noma",
        ["Selecciona tu comunidad", "Andaluc√≠a", "Arag√≥n", "Asturias", "Baleares", "Canarias",
         "Cantabria", "Castilla y Le√≥n", "Castilla-La Mancha", "Catalu√±a",
         "Comunidad Valenciana", "Extremadura", "Galicia", "Madrid",
         "Murcia", "Navarra", "Pa√≠s Vasco", "La Rioja", "Ceuta", "Melilla"]
    )
    
    estado_civil = st.selectbox(
        "üíç Estado civil",
        ["Selecciona", "Soltero/a", "Casado/a (declaraci√≥n conjunta)",
         "Casado/a (declaraci√≥n individual)", "Viudo/a", "Divorciado/a"]
    )

with col2:
    edad = st.number_input("üéÇ Edad", min_value=18, max_value=100, value=30)
    discapacidad = st.checkbox("‚ôø Tengo certificado de discapacidad (‚â•33%)")

st.write("**üë∂ Hijos a cargo:**")
col3, col4 = st.columns(2)
with col3:
    hijos_menores_3 = st.number_input("Menores de 3 a√±os", min_value=0, max_value=10, value=0)
with col4:
    hijos_mayores_3 = st.number_input("Mayores de 3 a√±os", min_value=0, max_value=10, value=0)

st.markdown("---")

# === INGRESOS ===
st.subheader("üí∞ Ingresos del Trabajo")
col5, col6 = st.columns(2)

with col5:
    salario = st.number_input("üíµ Salario bruto anual (‚Ç¨)", min_value=0.0, value=0.0, step=1000.0)
with col6:
    retenciones = st.number_input("üßæ Retenciones IRPF practicadas (‚Ç¨)", min_value=0.0, value=0.0, step=100.0,
                                  help="Mira tu n√≥mina o certificado de la empresa")

st.subheader("üè† Rendimientos del Capital Inmobiliario")
col7, col8 = st.columns(2)

with col7:
    alquiler_ingresos = st.number_input("üí∂ Ingresos brutos por alquiler (‚Ç¨)", min_value=0.0, value=0.0, step=1000.0)
with col8:
    alquiler_gastos = st.number_input("üîß Gastos deducibles del alquiler (‚Ç¨)", min_value=0.0, value=0.0, step=100.0,
                                      help="IBI, comunidad, reparaciones, intereses...")

st.subheader("üìà Otros Ingresos")
col9, col10 = st.columns(2)

with col9:
    dividendos = st.number_input("üíπ Dividendos e intereses (‚Ç¨)", min_value=0.0, value=0.0, step=100.0)
with col10:
    ganancias = st.number_input("üìä Ganancias patrimoniales (‚Ç¨)", min_value=0.0, value=0.0, step=1000.0,
                                help="Venta de acciones, criptos, inmuebles...")

st.markdown("---")

# === DEDUCCIONES ===
st.subheader("üìâ Deducciones y Reducciones")

plan_pensiones = st.number_input("üè¶ Aportaciones a planes de pensiones (‚Ç¨)", min_value=0.0, value=0.0, step=100.0,
                                 help="M√°ximo deducible: 1.500‚Ç¨/a√±o")

vivienda_habitual = st.checkbox("üè† Compr√© vivienda habitual antes de 2013 (deducci√≥n estatal)")
vivienda_importe = 0.0
if vivienda_habitual:
    vivienda_importe = st.number_input("Cantidad pagada por hipoteca (‚Ç¨)", min_value=0.0, value=0.0, step=100.0)

donaciones = st.number_input("‚ù§Ô∏è Donaciones (‚Ç¨)", min_value=0.0, value=0.0, step=50.0,
                             help="A ONGs, fundaciones, iglesia...")

maternidad = st.checkbox("üë∂ Madre trabajadora con hijos menores de 3 a√±os (deducci√≥n 1.200‚Ç¨/hijo)")

st.markdown("---")

# === BOT√ìN DE C√ÅLCULO ===
if st.button("üßÆ CALCULAR DECLARACI√ìN", type="primary", use_container_width=True):
    
    # Validaciones
    if comunidad == "Selecciona tu comunidad":
        st.error("‚ö†Ô∏è Por favor, selecciona tu comunidad aut√≥noma")
    elif estado_civil == "Selecciona":
        st.error("‚ö†Ô∏è Por favor, selecciona tu estado civil")
    else:
        # Preparar datos
        datos = {
            'comunidad': comunidad,
            'estado_civil': estado_civil,
            'edad': edad,
            'discapacidad': discapacidad,
            'hijos_menores_3': hijos_menores_3,
            'hijos_mayores_3': hijos_mayores_3,
            'salario': salario,
            'retenciones': retenciones,
            'alquiler_ingresos': alquiler_ingresos,
            'alquiler_gastos': alquiler_gastos,
            'dividendos': dividendos,
            'ganancias': ganancias,
            'plan_pensiones': plan_pensiones,
            'vivienda_habitual': vivienda_habitual,
            'vivienda_importe': vivienda_importe,
            'donaciones': donaciones,
            'maternidad': maternidad
        }
        
        # Calcular
        with st.spinner('Calculando tu declaraci√≥n...'):
            resultado = calcular_renta_total(datos)
        
        cuota_dif = resultado['cuota_diferencial']
        
        # RESULTADO PRINCIPAL
        color_clase = "pagar" if cuota_dif['diferencial'] > 0 else "devolver"
        simbolo = "üí∏" if cuota_dif['diferencial'] > 0 else "üí∞"
        
        st.markdown(f"""
        <div class="resultado-box">
            <h1>{simbolo} RESULTADO DE TU DECLARACI√ìN</h1>
            <div class="resultado-monto {color_clase}">{cuota_dif['importe']:,.2f} ‚Ç¨</div>
            <h2>{cuota_dif['resultado']}</h2>
        </div>
        """, unsafe_allow_html=True)
        
        # === RESUMEN EJECUTIVO ===
        st.header("üìä Resumen Ejecutivo")
        
        resumen = resultado['resumen']
        
        col_res1, col_res2, col_res3 = st.columns(3)
        
        with col_res1:
            st.metric("Base Imponible General", f"{resumen['base_imponible_general']:,.2f} ‚Ç¨")
            st.metric("Base Imponible Ahorro", f"{resumen['base_imponible_ahorro']:,.2f} ‚Ç¨")
        
        with col_res2:
            st.metric("Cuota √çntegra", f"{resultado['cuotas_integras']['total']:,.2f} ‚Ç¨")
            st.metric("Deducciones", f"{resultado['deducciones']['total_estatal'] + resultado['deducciones']['total_autonomica']:,.2f} ‚Ç¨")
        
        with col_res3:
            st.metric("Cuota L√≠quida", f"{resultado['cuotas_liquidas']['total']:,.2f} ‚Ç¨")
            st.metric("Retenciones", f"{cuota_dif['retenciones']:,.2f} ‚Ç¨")
        
        # Tipos impositivos
        st.info(f"""
        üìå **Tu tipo medio efectivo:** {resumen['tipo_medio']:.2f}%  
        üìå **Tu tipo marginal:** {resumen['tipo_marginal']:.2f}%
        
        *El tipo medio es el porcentaje real que pagas. El tipo marginal es lo que pagas por cada euro adicional.*
        """)
        
        # === DESGLOSE DETALLADO ===
        with st.expander("üí∞ Ver desglose detallado de ingresos"):
            rt = resultado['rendimiento_trabajo']
            if rt['bruto'] > 0:
                st.subheader("üëî Rendimientos del Trabajo")
                st.write(f"- Salario bruto: **{rt['bruto']:,.2f} ‚Ç¨**")
                st.write(f"- Reducci√≥n por trabajo: **-{rt['reduccion']:,.2f} ‚Ç¨**")
                st.write(f"- **Rendimiento neto: {rt['neto']:,.2f} ‚Ç¨**")
            
            rci = resultado['rendimiento_capital_inmobiliario']
            if rci['ingresos'] > 0:
                st.subheader("üè† Rendimientos Alquileres")
                st.write(f"- Ingresos: **{rci['ingresos']:,.2f} ‚Ç¨**")
                st.write(f"- Gastos: **-{rci['gastos']:,.2f} ‚Ç¨**")
                st.write(f"- Reducci√≥n 60%: **-{rci['reduccion_60']:,.2f} ‚Ç¨**")
                st.write(f"- **Rendimiento neto: {rci['neto_final']:,.2f} ‚Ç¨**")
        
        # === M√çNIMO PERSONAL Y FAMILIAR ===
        with st.expander("üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Ver m√≠nimo personal y familiar"):
            mpf = resultado['minimo_personal_familiar']
            st.info("El m√≠nimo personal y familiar es la cantidad que NO tributa porque se considera m√≠nimo vital.")
            st.write(f"- M√≠nimo del contribuyente: **{mpf['contribuyente']:,.2f} ‚Ç¨**")
            if mpf['descendientes'] > 0:
                st.write(f"- M√≠nimo por {mpf['total_hijos']} hijo(s): **{mpf['descendientes']:,.2f} ‚Ç¨**")
            st.write(f"- **Total exento: {mpf['total']:,.2f} ‚Ç¨**")
        
        # === TRAMOS IMPOSITIVOS ===
        with st.expander("üßÆ Ver c√°lculo por tramos impositivos"):
            st.write("**El IRPF es progresivo: cada tramo de ingresos tributa a un tipo diferente.**")
            
            cuotas = resultado['cuotas_integras']
            
            if cuotas['estatal_general'] > 0:
                st.subheader("üìä Parte ESTATAL (50%)")
                for tramo in cuotas['desglose_estatal_general']:
                    st.write(f"- Sobre **{tramo['base']:,.2f} ‚Ç¨** al **{tramo['tipo']*100:.2f}%** = {tramo['cuota']:,.2f} ‚Ç¨")
                st.write(f"**Subtotal estatal: {cuotas['estatal_general']:,.2f} ‚Ç¨**")
            
            if cuotas['autonomica_general'] > 0:
                st.subheader(f"üìä Parte AUTON√ìMICA - {comunidad} (50%)")
                for tramo in cuotas['desglose_autonomico_general']:
                    st.write(f"- Sobre **{tramo['base']:,.2f} ‚Ç¨** al **{tramo['tipo']*100:.2f}%** = {tramo['cuota']:,.2f} ‚Ç¨")
                st.write(f"**Subtotal auton√≥mico: {cuotas['autonomica_general']:,.2f} ‚Ç¨**")
        
        # === RECOMENDACIONES ===
        with st.expander("üí° Ver recomendaciones personalizadas"):
            if plan_pensiones < 1500 and resumen['base_imponible_general'] > 20000:
                st.success(f"üè¶ **Plan de pensiones:** A√∫n puedes aportar hasta {1500 - plan_pensiones:.0f} ‚Ç¨ m√°s y ahorrar en impuestos.")
            
            if alquiler_ingresos > 0 and alquiler_gastos == 0:
                st.warning("üè† **Gastos de alquiler:** Revisa si tienes gastos deducibles (IBI, comunidad, seguros...).")
            
            if hijos_menores_3 > 0 and not maternidad:
                st.info(f"üë∂ **Deducci√≥n por maternidad:** Si eres madre trabajadora, podr√≠as deducir {hijos_menores_3 * 1200:.0f} ‚Ç¨ adicionales.")
            
            st.write("""
            **Consejos generales:**
            - Guarda todos los certificados de retenciones
            - Conserva justificantes de donaciones y gastos deducibles
            - Consulta las deducciones espec√≠ficas de tu comunidad
            """)

# Footer
st.markdown("---")
st.markdown("""
<div style='text-align: center; color: #666; padding: 20px;'>
    <p>‚ö†Ô∏è Esta calculadora es orientativa. Para casos complejos, consulta con un asesor fiscal profesional.</p>
    <p>üìÖ C√°lculos basados en normativa IRPF 2024</p>
</div>
""", unsafe_allow_html=True)
